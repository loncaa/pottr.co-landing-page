{
  "version": 3,
  "sources": ["../../app/root.tsx", "../../app/utils/gtag.client.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport \"./tailwind.css?__remix_sideEffect__\";\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, json, useLoaderData, useLocation } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nimport * as gtag from \"./utils/gtag.client\";\nimport { url, root } from \"./locales/en/meta.json\";\n\n// Load the GA tracking id from the .env\nexport const loader = async ({\n  context\n}) => {\n  return json({\n    ENV: {\n      gaTrackingId: context.cloudflare.env.GA_TRACKING_ID,\n      isDevelopment: context.cloudflare.env.NODE_ENV === \"development\"\n    }\n  });\n};\nexport default function App() {\n  _s();\n  const {\n    ENV\n  } = useLoaderData();\n  const {\n    isDevelopment,\n    gaTrackingId\n  } = ENV;\n  const location = useLocation();\n  useEffect(() => {\n    if (gaTrackingId?.length) {\n      gtag.pageview(location.pathname, gaTrackingId);\n    }\n  }, [location, gaTrackingId]);\n  useEffect(() => {\n    if (isDevelopment) {\n      console.log(\"DEV ENV\");\n    }\n  }, [isDevelopment]);\n  return <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content={url} />\n        <meta property=\"og:title\" content={root.title} />\n        <meta property=\"og:description\" content={root.description} />\n        <meta property=\"og:image\" content={`${url}/preview.png`} />\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:url\" content={url} />\n        <meta name=\"twitter:title\" content={root.title} />\n        <meta name=\"twitter:description\" content={root.description} />\n        <meta name=\"twitter:image\" content={`${url}/preview.png`} />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {isDevelopment || !gaTrackingId ? null : <>\n            <script async src={`https://www.googletagmanager.com/gtag/js?id=${gaTrackingId}`}>\n          </script>\n            <script async id=\"gtag-init\" dangerouslySetInnerHTML={{\n          __html: `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n\n                gtag('config', '${gaTrackingId}');\n                `\n        }} />\n\n          </>}\n\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>;\n}\n_s(App, \"VWcUo2zPKJARtAI8MOZZcrVBIbw=\", false, function () {\n  return [useLoaderData, useLocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/gtag.client.ts\"\n);\nimport.meta.hot.lastModified = \"1744895504410.0444\";\n}\n// REMIX HMR END\n\ndeclare global {\n  interface Window {\n    gtag: (\n      option: string,\n      gaTrackingId: string,\n      options: Record<string, unknown>\n    ) => void;\n  }\n}\n\n/**\n * @example\n * https://developers.google.com/analytics/devguides/collection/gtagjs/pages\n */\nexport const pageview = (url: string, trackingId: string) => {\n  if (!window.gtag) {\n    console.warn(\n      \"window.gtag is not defined. This could mean your google analytics script has not loaded on the page yet.\"\n    );\n    return;\n  }\n  window.gtag(\"config\", trackingId, {\n    page_path: url,\n  });\n};\n\n/**\n * @example\n * https://developers.google.com/analytics/devguides/collection/gtagjs/events\n */\nexport const event = ({\n  action,\n  category,\n  label,\n  value,\n}: Record<string, string>) => {\n  if (!window.gtag) {\n    console.warn(\n      \"window.gtag is not defined. This could mean your google analytics script has not loaded on the page yet.\"\n    );\n    return;\n  }\n  window.gtag(\"event\", action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAA0B;;;ACpB1B,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAiBO,IAAM,WAAW,CAACC,MAAa,eAAuB;AAC3D,MAAI,CAAC,OAAO,MAAM;AAChB,YAAQ;AAAA,MACN;AAAA,IACF;AACA;AAAA,EACF;AACA,SAAO,KAAK,UAAU,YAAY;AAAA,IAChC,WAAWA;AAAA,EACb,CAAC;AACH;;;ADwBQ;AA1DR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AAoBe,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,QAAM,WAAW,YAAY;AAC7B,+BAAU,MAAM;AACd,QAAI,cAAc,QAAQ;AACxB,MAAK,SAAS,SAAS,UAAU,YAAY;AAAA,IAC/C;AAAA,EACF,GAAG,CAAC,UAAU,YAAY,CAAC;AAC3B,+BAAU,MAAM;AACd,QAAI,eAAe;AACjB,cAAQ,IAAI,SAAS;AAAA,IACvB;AAAA,EACF,GAAG,CAAC,aAAa,CAAC;AAClB,SAAO,mDAAC,UAAK,MAAK,MACd;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,UAAK,UAAS,WAAU,SAAQ,aAAjC;AAAA;AAAA;AAAA;AAAA,aAA2C;AAAA,MAC3C,mDAAC,UAAK,UAAS,UAAS,SAAS,OAAjC;AAAA;AAAA;AAAA;AAAA,aAAsC;AAAA,MACtC,mDAAC,UAAK,UAAS,YAAW,SAAS,KAAK,SAAxC;AAAA;AAAA;AAAA;AAAA,aAA+C;AAAA,MAC/C,mDAAC,UAAK,UAAS,kBAAiB,SAAS,KAAK,eAA9C;AAAA;AAAA;AAAA;AAAA,aAA2D;AAAA,MAC3D,mDAAC,UAAK,UAAS,YAAW,SAAS,GAAG,qBAAtC;AAAA;AAAA;AAAA;AAAA,aAAyD;AAAA,MACzD,mDAAC,UAAK,MAAK,gBAAe,SAAQ,yBAAlC;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAA,MACxD,mDAAC,UAAK,MAAK,eAAc,SAAS,OAAlC;AAAA;AAAA;AAAA;AAAA,aAAuC;AAAA,MACvC,mDAAC,UAAK,MAAK,iBAAgB,SAAS,KAAK,SAAzC;AAAA;AAAA;AAAA;AAAA,aAAgD;AAAA,MAChD,mDAAC,UAAK,MAAK,uBAAsB,SAAS,KAAK,eAA/C;AAAA;AAAA;AAAA;AAAA,aAA4D;AAAA,MAC5D,mDAAC,UAAK,MAAK,iBAAgB,SAAS,GAAG,qBAAvC;AAAA;AAAA;AAAA;AAAA,aAA0D;AAAA,MAC1D,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAdT;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA,IACA,mDAAC,UACE;AAAA,uBAAiB,CAAC,eAAe,OAAO,sFACrC;AAAA,2DAAC,YAAO,OAAK,MAAC,KAAK,+CAA+C,kBAAlE;AAAA;AAAA;AAAA;AAAA,eACF;AAAA,QACE,mDAAC,YAAO,OAAK,MAAC,IAAG,aAAY,yBAAyB;AAAA,UACxD,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,kCAKgB;AAAA;AAAA,QAE1B,KARI;AAAA;AAAA;AAAA;AAAA,eAQD;AAAA,WAXsC;AAAA;AAAA;AAAA;AAAA,aAavC;AAAA,MAEF,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SAnBd;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,OArCG;AAAA;AAAA;AAAA;AAAA,SAsCL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "url"]
}
